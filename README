Example code for "Web-scale computer vision using mapreduce for multimedia data mining"

Algorithms closely track those in the paper where possible.  Alternative implementations are provided that extend those in the paper and provide more efficient implementations.  The examples are all independent to make them easier to understand at the expense of duplicative code.  Variable names are chosen to be similar to the paper if possible (often using the Type as the variable name as it is more descriptive).  The implementations used for performance testing are written in C and Python and are not the ones matching the figures.

Algorithm 1:  wordcount/wordcount.py
Algorithm 2:  normalize/normalize.py
Algorithm 3:  classtrain/classtrain.py
Algorithm 4:  slidingwindow/slidingwindow.py
Algorithm 5:  kmeans/kmeans.py
Algorithm 6:  kmeans/kmeans_imc.py
Algorithm 7:  bof/bof_maponly.py
Algorithm 8:  bof/bof.py
Algorithm 9:  bgsub/bgsub.py
Algorithm 10: compose/compose.py



If you use this in your research, please cite as
B. White, T. Yeh, J. Lin, and L. Davis, "Web-scale computer vision using mapreduce for multimedia data mining," in MDMKDD, 2010.

Bibtex
@inproceedings{white10kdd,
author = {Brandyn White and Tom Yeh and Jimmy Lin and Larry Davis},
booktitle = {MDMKDD},
title = {Web-Scale Computer Vision using MapReduce for Multimedia Data Mining},
year = {2010}
}